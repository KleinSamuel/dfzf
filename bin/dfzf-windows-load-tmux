#!/usr/bin/env bash
set -euo pipefail

export SHELL="$(command -v bash)"

function get_pid_for_tmux_session() {
	local session_name="$1"
	if command -v tmux &>/dev/null; then
		tmux list-clients -t "$session_name" -F '#{client_pid}' | head -1
		return 0
	fi
	return 1
}

function get_kitty_pid_for_tmux_pid() {
	local tmux_pid="$1"

	while [[ -n "$tmux_pid" && "$tmux_pid" != "1" ]]; do
        local process_name
        process_name=$(ps -o comm= -p "$tmux_pid" 2>/dev/null)
        
        if [[ "$process_name" == "kitty" ]]; then
            echo "$tmux_pid"
            return 0
        fi
        
        tmux_pid=$(ps -o ppid= -p "$tmux_pid" 2>/dev/null | tr -d ' ')
    done
}

function get_con_id_for_terminal_pid() {
	local terminal_pid="$1"

	local con_id
	con_id=$(swaymsg -t get_tree | \
		jq -r --arg pid "$terminal_pid" '.. | select(.pid? == ($pid | tonumber)) | .id' 2>/dev/null)
	
	if [[ -n "$con_id" && "$con_id" != "null" ]]; then
		echo "$con_id"
		return 0
	else
		return 1
	fi
}

function get_con_id_for_tmux_session() {
	local session_name="$1"
	tmux_pid=$(get_pid_for_tmux_session "$session_name")
	if [[ -z "$tmux_pid" ]]; then
		return 1
	fi
	terminal_pid=$(get_kitty_pid_for_tmux_pid "$tmux_pid")
	if [[ -z "$terminal_pid" ]]; then
		return 1
	fi
	con_id=$(get_con_id_for_terminal_pid "$terminal_pid")
	if [[ -z "$con_id" ]]; then
		return 1
	fi
	echo "$con_id"
	return 0
}

function get_tmux_sessions_with_con_id() {
	tmux list-sessions | while read -r session; do
		session_name=$(echo "$session" | cut -d: -f1)
		con_id=$(get_con_id_for_tmux_session "$session_name")
		if [[ -n "$con_id" ]]; then
			echo "[tmux-session]	$session_name #$con_id"
		fi
	done
}

function get_tmux_windows() {
	tmux list-sessions -F '#S' | xargs -I {} tmux list-windows -t {} -F '#{session_name} #W #I' | sed 's/^/[tmux-window]	/'
}

function switch_to_tmux_window() {
	local win_str="$1"

	local session_name=$(echo $win_str | awk '{print $2}')
	local window_num=$(echo $win_str | awk '{print $4}')

	local con_id=$(get_con_id_for_tmux_session "$session_name")

	dfzf-exec '[con_id='"$con_id"'] focus' && tmux select-window -t "$session_name:$window_num"
}

case "$1" in
	sessions)
		get_tmux_sessions_with_con_id
		;;
	windows)
		get_tmux_windows
		;;
	switch)
		shift
		switch_to_tmux_window "$1"
		;;
esac

